{"version":3,"sources":["actions/index.js","websocket-api/handlers.js","websocket-api/index.js","utils/nameAvatarGenerator.js","MUI_theme.js","components/WorldChat/WorldChatPlayers.js","components/ChatBox/index.js","components/WorldChat/index.js","components/Header/index.js","components/GameRooms/Rooms.js","components/GameRooms/NewRoomDialog.js","components/WaitingRoom/index.js","components/GameRooms/index.js","components/ActiveGame/GameGrid.js","components/ActiveGame/index.js","requests/requestHandlers.js","requests/index.js","components/PlayerForms/index.js","components/PlayerDrawer/index.js","components/Splash/index.js","components/404Page/index.js","components/App/index.js","reducers/worldChat.js","reducers/currentGame.js","reducers/currentPlayer.js","reducers/allGameRooms.js","reducers/index.js","serviceWorker.js","index.js"],"names":["updateGlobalPlayers","player","type","setGlobalPlayers","players","updateGlobalMessages","message","logoutUser","saveCurrentPlayer","setAllGameRooms","room","updateGameRoomList","updateGameRoom","updateActiveGame","data","updateInactiveGame","updateActiveGameMsgs","gameOver","handleWorldChat","store","dispatch","handleActiveGameUpdate","socket","openSocket","leaveWorldChat","emit","joinWorldChat","joinGameRoom","roomId","password","leaveGame","listenToActiveGame","on","unsubscribeToActiveGame","removeListener","rooms","update","updateType","includes","generateAvatar","playerName","firstLast","length","Avatar","size","theme","createMuiTheme","palette","chips","purple","deepPurple","pink","red","yellow","blue","orange","background","dark","light","lightBlue","lighter","cyan","green","lime","lightGreen","darkBlueGray","blueGrey","darkerBlueGray","darkGray","grey","darkerGray","midDarkBlue","midBlue","lighterGray","lightGray","lighterBlue","useStyles","makeStyles","root","width","height","overflow","backgroundColor","padding","spacing","borderRadius","playerCard","paper","connect","worldChat","props","classes","List","className","aria-labelledby","subheader","ListSubheader","component","id","Divider","map","player_name","ListItem","button","key","uuidv4","ListItemAvatar","ListItemText","primary","marginBottom","userName","display","newMessageForm","position","bottom","textField","margin","marginRight","submit","marginLeft","main","color","common","white","borderBottomLeftRadius","title","overflowWrap","ChatBox","messages","sendMessage","messagesEndRef","useRef","useState","newMessage","setNewMessage","autoScroll","switchAutoScroll","useEffect","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","Box","boxShadow","Typography","variant","alignItems","secondary","messageCard","ref","onFocus","onBlur","autoComplete","onSubmit","TextField","label","rowsMax","value","onChange","target","Button","onClick","endIcon","container","maxWidth","flexDirection","minHeight","breakpoints","down","paddingRight","chatToggle","right","top","zIndex","chatBox","currentPlayer","me","token","isChatActive","setChatActive","win_streak","_id","wins","losses","Switch","checked","inputProps","sendWorldMessage","flexGrow","appBar","justifyContent","menuButton","contrastText","up","toggleDrawer","AppBar","Toolbar","IconButton","aria-label","edge","cardItem","joinBtn","cardsContainer","isInRoom","maxHeight","fullMessage","avatarContainer","avatarIcon","allGameRooms","currPlayerName","joinHandler","roomPass","setRoomPass","showPassInput","setShowPassInput","passInput","Input","placeholder","input","autoFocus","noRoomsMessage","name","status","hasPassword","isFull","isAlreadyInRoom","some","p","disabled","handleJoinClick","ListItemSecondaryAction","inputContainer","minWidth","NewRoomDialog","submitHandler","isVisible","showForm","roomName","roomPassword","formFields","setFormFields","handleForm","Dialog","open","onClose","DialogTitle","DialogContent","required","DialogActions","textAlign","shadows","leaveButton","isReady","mainCardBorder","border","playerColor","oppCardBorder","oppColor","mainReadyBtn","chip","alignSelf","chipHover","cursor","colorsContainer","alignContent","colorBoxTitle","colorsBox","opacity","opponentReadyBtn","currentGame","resetActiveGame","hues","Object","values","colors","setIsReady","mainPlayer","setMainPlayer","opponent","setOpponent","setPlayerColor","setOppColor","prevPlayers","pickRandomColor","cleared","filter","c","Math","floor","random","chipStyleSelector","isPlayer","isOpp","chipColor","handleReady","payload","Grid","wrap","Fab","item","xs","ifMain","opponentBtn","Grow","in","clientId","hue","bgcolor","titleContainer","roomsContainer","currRoomStatus","formVisible","setIsInRoom","handleShowForm","bool","handleLeave","availableRooms","startIcon","to","createNewGameRoom","leaveHandler","turnIndicator","isPlayerTurn","opp","gridContainer","column","dispaly","slot","borderColor","emptySlot","oppWin","mainWin","isActive","highlightSlot","highlightBorder","borderWidth","mainBg","oppBg","addChipIcon","addChipBtn","reMatchBox","slotProps","m","grid","gridX","currentTurn","prevSlot","winner","gameStatus","resetGame","resetPlayerReady","setMain","showWaitRoom","setShowWaitRoom","prevState","xCoordinate","setCoordinate","handleSlotStyle","hovered","isBottom","handleHovered","colId","parentElement","split","parseInt","handleChipPlacement","placePlayerChip","onMouseLeave","idx","bottomIdx","isHovered","i","onMouseEnter","gridSlot","isNew","join","bottomHoveredSlot","Fade","defaultSlot","newSlot","timeout","flexWrap","marginTop","resetGameGrid","handlers","routes","login","signup","anonLogin","noTokenPost","route","fetch","method","body","JSON","stringify","headers","loginViaEmail","this","signupUser","loginViaToken","anonymousLogin","handler","parse","localStorage","getItem","console","log","inputsContainer","loadingIcon","optionButton","error","PlayerForms","loginValues","setLoginValues","signUpValues","setSignUpValues","showSignUpForm","setShowSignUpForm","showAnonLoginForm","setShowAnonLoginForm","errors","setErrors","isLoading","setLoading","handleLoginForm","handleSignUpForm","withSpace","replace","withoutSpace","verifySignUpParams","param","readable","push","toUpperCase","confirm_password","CircularProgress","signUpUser","a","email","secret_one","secret_two","request","res","ok","json","registerPlayer","loginAnonymously","anon","loginUser","generateErrors","err","optionButtons","anonForm","maxLength","registerForm","loginForm","drawer","flexShrink","toolbar","mixins","drawerPaper","fixedMenu","menuList","link","textDecoration","deletePlayer","drawers","ListItemIcon","removeItem","Hidden","smUp","implementation","Drawer","anchor","ModalProps","keepMounted","xsDown","chipOne","chipTwo","Splash","randomizedColors","sort","currSlot","setCurrSlot","currChip","setCurrChip","setGrid","placeRandomChip","useCallback","randIdx","copy","timout","setInterval","clearInterval","connectFourGrid","j","ifNew","colorChip","slidingChip","direction","paddingTop","FourOhFourPage","homePgContainer","homePgItem","loginPageContainer","savePlayer","isDrawerOpen","openDrawer","setError","handleDrawerToggle","setItem","tokenLogin","exact","path","render","state","action","update_type","idxFound","findIndex","splice","initialState","gridCopy","r","rootReducer","combineReducers","Boolean","window","location","hostname","match","createStore","composeWithDevTools","ReactDOM","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0dffde33.chunk.js","sourcesContent":["/// GLOBAL CHAT ACTIIONS\nexport const updateGlobalPlayers = player => ({\n  type: 'UPDATE_GLOBAL_PLAYERS',\n  player\n});\n\nexport const setGlobalPlayers = players => ({\n  type: 'SET_GLOBAL_PLAYERS',\n  players\n})\n\nexport const updateGlobalMessages = message => ({\n  type: 'UPDATE_GLOBAL_MESSAGES',\n  message\n});\n\n/// APPLICATION ACTION\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n})\n\n/// PLAYER INFO\nexport const saveCurrentPlayer = player => ({\n  type: 'SAVE_PLAYER_INFO',\n  player\n})\n\n\n/// GAME ROOMS ACTIONS\nexport const setAllGameRooms = room => ({\n  type: 'SET_ALL_GAME_ROOMS',\n  room\n})\n\nexport const updateGameRoomList = room => ({\n  type: 'UPDATE_GAME_ROOM_LIST',\n  room\n})\n\nexport const updateGameRoom = room => ({\n  type: 'UPDATE_A_GAME_ROOM',\n  room\n})\n\n\n/// IN GAME ACTIION\nexport const updateActiveGame = data => ({\n  type: 'UPDATE_ACTIVE_GAME',\n  data\n})\n\nexport const updateInactiveGame = data => ({\n  type: 'UPDATE_INACTIVE_GAME',\n  data\n})\n\nexport const leaveActiveGame = () => ({\n  type: 'LEAVE_ACTIVE_GAME',\n})\n\nexport const updateActiveGameMsgs = data => ({\n  type: 'UPDATE_ACTIVE_GAME_MSGS',\n  data\n})\n\nexport const gameOver = data => ({\n  type: 'GAME_OVER',\n  data\n})\n\nexport const rematchReset = () => ({\n  type: 'REMATCH_GAME_RESET',\n})\n\nexport const resetReady = () => ({\n  type: 'RESET_PLAYER_READY',\n})\n\nexport const resetGrid = () => ({\n  type: 'RESET_GRID',\n})\n","import { \n  updateGlobalPlayers,\n  updateActiveGame,\n  updateGlobalMessages,\n  setGlobalPlayers,\n  setAllGameRooms,\n  updateGameRoomList,\n  updateGameRoom,\n  updateActiveGameMsgs,\n  updateInactiveGame,\n  gameOver,\n  logoutUser \n} from '../actions';\nimport store from '../index';\n\n//// WORLD CHAT\nexport function handleWorldChat(data) {\n  const { type } = data;\n  if (type === 'player') {\n    store.dispatch(updateGlobalPlayers(data));\n  } else if (type === 'message'  || type === 'notification') {\n    store.dispatch(updateGlobalMessages(data));\n  }\n};\n\nexport function handleAllWorldPlayers(players) {\n  store.dispatch(setGlobalPlayers(players));\n}\n\n\n/// GAME ROOM HANDLERS\nexport function handleAllGameRooms(rooms) {\n  store.dispatch(setAllGameRooms(rooms));\n} \n\nexport function handleGameRoomUpdate(update) {\n  const { updateType } = update;\n  if (['addRoom', 'deleteRoom'].includes(updateType)) {\n    store.dispatch(updateGameRoomList(update));\n  } else if (updateType === 'updateRoom') {\n    store.dispatch(updateGameRoom(update))\n  }\n}\n\n\n\n//// ACTIVE GAME\nexport function handleActiveGameUpdate(data) {\n  const {type} = data;\n\n  if (type === 'message' || type === 'notification') {\n    store.dispatch(updateActiveGameMsgs(data));\n  } else if (type === 'inactiveUpdate') {\n    store.dispatch(updateInactiveGame(data));\n  } else if (type === 'activeUpdate') {\n    store.dispatch(updateActiveGame(data));\n  } else if (type === 'gameOver') {\n    store.dispatch(gameOver(data));\n  }\n};\n\n\n//// OTHER\nexport function handleDisconnect() {\n  store.dispatch(logoutUser());\n}","import openSocket from 'socket.io-client';\nimport {\n  handleWorldChat,\n  handleAllWorldPlayers,\n  handleAllGameRooms,\n  handleGameRoomUpdate,\n  handleActiveGameUpdate,\n  handleDisconnect\n} from './handlers';\n\nconst socket = openSocket('https://ec2-34-205-32-52.compute-1.amazonaws.com:443');\n\n//// AUTO WORLD CHAT \nsocket.on('world chat update', handleWorldChat);\nsocket.on('send world chat players', handleAllWorldPlayers);\n//// AUTO GAME ROOMS\nsocket.on('send all game rooms', handleAllGameRooms);\nsocket.on('game rooms update', handleGameRoomUpdate);\nsocket.on('disconnect', handleDisconnect);\n\n/// WORLD CHAT\nexport function sendWorldMessage(message) {\n  socket.emit('broadcast to world chat', message)\n};\n\nexport function leaveWorldChat() {\n  socket.emit('leave world chat');\n};\n\nexport function joinWorldChat(player) {\n  socket.emit('join world chat', player);\n};\n\nexport function getWorldChatPlayers() {\n  socket.emit('get world chat players');\n}\n\nexport function subscribeToWorldChat() {\n  socket.on('world chat update', handleWorldChat);\n};\n\n\n/// CLIENT REGISTRATION\nexport function registerClient(token) {\n  socket.emit('register client', token);\n}\n\nexport function removeClient(token) {\n  socket.emit('remove client', token);\n};\n\n\n\n/// GAME ROOMS\nexport function createNewGameRoom(name, password = '') {\n  socket.emit('create game room', { name, password });\n};\n\nexport function joinGameRoom(roomId, password = '') {\n  socket.emit('join game room', {roomId, password});\n};\n\nexport function leaveGame() {\n  socket.emit('leave game room');\n};\n\n\n//// Active Game\nexport function listenToActiveGame() {\n  socket.on('active game update', handleActiveGameUpdate);\n};\n\nexport function unsubscribeToActiveGame() {\n  socket.removeListener('active game update')\n}\n\nexport function setPlayerReady(data) {\n  socket.emit('set player ready', data);\n};\n\nexport function placePlayerChip(xCoordinate) {\n  socket.emit('place player chip', xCoordinate);\n};\n\nexport function sendInGameMessage(payload) {\n  socket.emit('send in game message', payload);\n};\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst generateAvatar = playerName => {\n  const firstLast = playerName[0] + playerName[playerName.length - 1];\n\n  return (\n    <Avatar size=\"small\">\n      {firstLast}\n    </Avatar>\n  );\n}\n      \nexport default generateAvatar;","import { createMuiTheme } from '@material-ui/core/styles';\nimport {\n  red,\n  blue,\n  deepPurple,\n  yellow,\n  cyan,\n  lime,\n  blueGrey,\n  grey,\n  lightBlue,\n  lightGreen,\n  orange,\n  pink,\n} from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette: {\n    chips: {\n      purple: deepPurple['500'],\n      pink: pink['A200'],\n      red: red['500'],\n      yellow: yellow['A200'],\n      blue: blue['500'],\n      orange: orange['A400'],\n    },\n    background: {\n      blue: {\n        dark: blue['A700'],\n        light: lightBlue['A700'],\n        lighter: lightBlue['100'],\n        cyan: cyan['A400']\n      },\n      green: {\n        lime: lime['A700'],\n        light: lightGreen['A700']\n      },\n      red: {\n        red: red['A400'],\n      }\n    },\n    dark: {\n      darkBlueGray: blueGrey['800'],\n      darkerBlueGray: blueGrey['900'],\n      darkGray: grey['800'],\n      darkerGray: grey['900'],\n      midDarkBlue: blueGrey['400'],\n      midBlue: blueGrey['300']\n    },\n    light: {\n      lighterGray: grey['50'],\n      lightGray: grey['200'],\n      lighterBlue: blueGrey['50'],\n      lightBlue: blueGrey['200'],\n    }\n  },\n});\n\nexport default theme;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport generateAvatar from '../../utils/nameAvatarGenerator';\nimport theme from '../../MUI_theme';\nimport uuidv4 from 'uuid/v4';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '40%',\n    overflow: 'scroll',\n    backgroundColor: ({palette}) => palette.light.lighterBlue,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(0, 0, 1, 1)\n  },\n  playerCard: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '5px',\n  }\n}));\n\nfunction WorldChatPlayers(props) {\n  const classes = useStyles(theme);\n  const { players } = props;\n\n  const generatePlayerCards = () => players.map(player => {\n    const { player_name } = player;\n    return (\n      <ListItem button className={classes.playerCard} key={uuidv4()}>\n          <ListItemAvatar>\n            {generateAvatar(player_name)}\n          </ListItemAvatar>\n        <ListItemText primary={player_name} />\n        <Divider />\n      </ListItem>\n    )\n  });\n\n  return (\n    <List\n      className={classes.root}\n      aria-labelledby=\"world-chat-players\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"world-chat-players\">\n          Online Players\n        </ListSubheader>\n      }>\n      <Divider />\n      {generatePlayerCards()}\n    </List>\n  );\n};\n\nconst mapStateToProps = ({ worldChat }) => ({\n  players: worldChat.players,\n})\n\nexport default connect(mapStateToProps)(WorldChatPlayers);\n","import React, { useRef, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport theme from '../../MUI_theme';\nimport uuidv4 from 'uuid/v4';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    borderRadius: '10px',\n    marginBottom: '55px',\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper\n  },\n  userName: {\n    display: 'inline',\n  },\n  newMessageForm: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  textField: {\n    margin: theme.spacing(1, 0),\n    width: '90%',\n    marginRight: 0,\n    background: theme.palette.background.paper,\n  },\n  submit: {\n    margin: theme.spacing(1, 0),\n    marginLeft: 0,\n    background: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    borderBottomLeftRadius: 0\n  },\n  title: {\n    width: '100%',\n    padding: theme.spacing(1, 2),\n    background: ({palette}) => palette.light.lighterBlue,\n  },\n  message: {\n    width: '95%',\n    overflowWrap: 'break-word',\n    color: ({palette}) => palette.dark.darkerBlueGray\n  }\n}));\n\nfunction ChatBox(props) {\n  const classes = useStyles(theme);\n  const { messages, sendMessage, title } = props;\n  const messagesEndRef = useRef(null);\n  const [newMessage, setNewMessage] = useState('');  \n  const [autoScroll, switchAutoScroll] = useState(false);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n  };\n\n  useEffect(() => {\n    if (autoScroll) {\n      scrollToBottom();\n    }\n  }, [props.messages, autoScroll])\n\n  const messageCard = (message, player_name = false, type) => (\n    <ListItem key={uuidv4()} alignItems=\"flex-start\" className={classes.message}>\n        <ListItemText\n          className={classes.message}\n          primary={\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.userName}\n              color=\"textSecondary\"\n            >\n              {(type === 'message') && `${player_name}: `}\n            </Typography>\n          }\n          secondary={\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n            >\n              {message}\n            </Typography>\n          }\n        />\n    </ListItem>\n  );\n\n  const generateMessageCards = () => messages\n    .map(({ message, player_name, type }) => messageCard(message, player_name, type));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (newMessage.length > 0) {\n      sendMessage(newMessage);\n      setNewMessage('');\n    }\n  }\n  \n  return (\n    <Box boxShadow={3} className={classes.root}>\n      <Typography\n        variant=\"h6\"\n        className={classes.title}\n      >\n        {title}\n      </Typography>\n      <List>\n        {generateMessageCards()}\n        <div ref={messagesEndRef}/>\n      </List>\n      <form \n        onFocus={() => switchAutoScroll(true)} \n        onBlur={() => switchAutoScroll(false)}\n        autoComplete=\"off\" \n        className={classes.newMessageForm} \n        onSubmit={handleSubmit}>\n        <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Message\"\n          rowsMax=\"4\"\n          value={newMessage}\n          onChange={({target}) => setNewMessage(target.value)}\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          className={classes.submit}\n          endIcon={<Send/>}\n        >\n          Send\n        </Button>\n      </form> \n    </Box>\n  );\n}\n\nexport default ChatBox;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { joinWorldChat, sendWorldMessage, leaveWorldChat, getWorldChatPlayers } from '../../websocket-api';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport WorldChatPlayers from './WorldChatPlayers';\nimport Switch from '@material-ui/core/Switch';\nimport theme from '../../MUI_theme';\nimport ChatBox from '../ChatBox';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 0, 2, 2),\n    margin: 'auto',\n    maxWidth: '700px',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    minHeight: '92vh',\n    height: '100%',\n    [theme.breakpoints.down('md')]: {\n      paddingRight: theme.spacing(2)\n    }\n  },\n  chatToggle: {\n    position: 'absolute',\n    right: '10px',\n    top: '20px',\n    zIndex: 1\n  },\n  chatBox: {\n    height: '60%',  \n    display: 'flex',\n    width: '100%',\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.spacing(1, 1, 0, 0)\n  },\n}));\n\nfunction WorldChat(props) {\n  const classes = useStyles(theme);\n  const [isChatActive, setChatActive] = useState(true);\n  const {\n    me,\n    messages,\n  } = props;\n  const { player_name, win_streak, _id, wins, losses } = me;\n\n  const leaveChat = () => {\n    leaveWorldChat();\n  }\n  const handleChatToggle = () => {\n    if (isChatActive) {\n      leaveChat();\n    } else {\n      joinWorldChat({player_name, win_streak, _id, wins, losses });\n    }\n    setChatActive(!isChatActive);\n  };\n\n  const handleSendMessage = (message) => {\n    sendWorldMessage(message);\n  };\n  \n  useEffect(() => {\n    joinWorldChat({player_name, win_streak, _id, wins, losses });\n    getWorldChatPlayers();\n  }, [player_name, win_streak, _id, wins, losses]);\n\n  return (\n    <Box className={classes.container}>\n      <Switch\n        checked={isChatActive}\n        onChange={handleChatToggle}\n        className={classes.chatToggle}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'Join/leave world chat' }}\n      />\n      <Box className={classes.chatBox}>\n        < ChatBox messages={messages} sendMessage={handleSendMessage}title={'World Chat:'} />\n      </Box>\n      <WorldChatPlayers />\n    </Box>\n  )\n};\n\nconst mapStateToProps = ({ worldChat, currentPlayer }) => ({\n  messages: worldChat.messages,\n  me: currentPlayer.player,\n  token: currentPlayer.token\n})\n\nexport default connect(mapStateToProps)(WorldChat)\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport theme from '../../MUI_theme';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100vw'\n  },\n  appBar: {\n    background: ({palette}) => palette.dark.darkBlueGray,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  title: {\n    flexGrow: 1,\n    color: ({palette}) => palette.light.lighterGray\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.primary.contrastText,\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  }\n}));\n\nfunction Header(props) {\n  const classes = useStyles(theme);\n  const {toggleDrawer} = props;\n\n  return (\n    <>\n    <header className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title}>\n            {/* LOGO GOES HERE */}\n            Connect [ ]\n          </Typography>\n          {\n            props.player &&\n            <IconButton\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={toggleDrawer}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n             </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n    </header>\n    </>\n  );\n}\n\nconst mapStateToProps = ({ currentPlayer }) => ({\n  player: currentPlayer.player || false,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport generateAvatar from '../../utils/nameAvatarGenerator';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Button from '@material-ui/core/Button';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Typography from '@material-ui/core/Typography';\nimport theme from '../../MUI_theme';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles(theme => ({\n  cardItem: {\n    backgroundColor: ({palette}) => palette.background.blue.lighter,\n    color: ({palette}) => palette.dark.darkerBlueGray,\n    borderRadius: '5px',\n    marginBottom: '10px'\n  },\n  joinBtn: {\n    marginRight: theme.spacing(2),\n    background: theme.palette.background.paper,\n    '&:hover': {\n      background: ({palette}) => palette.background.green.light\n    },\n    [theme.breakpoints.down('sm')]: {\n      padding: '5px'\n    },\n  },\n  cardsContainer: {\n    padding: theme.spacing(1),\n    height: ({isInRoom}) => isInRoom ? '51vh' : '87vh',\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: '43vh'\n    },\n    overflow: 'scroll',\n  },\n  fullMessage: {\n    color: theme.palette.common.white\n  },\n  avatarContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    },\n  },\n  avatarIcon: {\n    padding: '5px'\n  }\n}));\n\nfunction Rooms({isInRoom, allGameRooms, joinHandler, currPlayerName}) { \n  const [roomPass, setRoomPass] = useState('');\n  const [showPassInput, setShowPassInput] = useState(false);\n  const classes = useStyles({...theme, isInRoom});\n\n  const passInput = (\n    <Input\n      placeholder=\"Password\"\n      className={classes.input}\n      value={roomPass}\n      onChange={(e) => setRoomPass(e.target.value)}\n      onBlur={() => setShowPassInput(false)}\n      autoFocus\n      inputProps={{\n        'aria-label': 'room password input',\n      }}\n    />\n  );\n\n  const handleJoinClick = (roomId, hasPassword) => {\n    if (hasPassword && !roomPass.length) {\n      setShowPassInput(true);\n    } else {\n      joinHandler(roomId, roomPass);\n      setRoomPass('');\n    }\n  };\n\n  const generateGameRooms = () => {\n    return allGameRooms.map(room => {\n      const { roomId, players, name, status, hasPassword } = room;\n      const playerInfo = players[0] || players[1];\n      const { player_name } = playerInfo;\n      const isFull = status === 'full';\n      const isAlreadyInRoom = players.some(p => {\n        if (p !== null) {\n          return p.player_name === currPlayerName;\n        } else {\n          return false;\n        }\n      });\n\n      return (\n        <ListItem key={roomId} className={classes.cardItem}>\n          <Button\n            disabled={isFull || isAlreadyInRoom}\n            variant=\"contained\"\n            onClick={() => handleJoinClick(roomId, hasPassword)}\n            className={classes.joinBtn}\n            endIcon={hasPassword || isFull ? <LockIcon/> : <ArrowForwardIcon />}\n          >\n            {isFull ? 'Full' : 'Join'}\n          </Button>\n          <ListItemText\n            primary={showPassInput ? passInput : name }\n            secondary={player_name}\n          />\n          <ListItemSecondaryAction className={classes.avatarContainer}>\n              {/* CALCULATE LATER */}\n              <Typography variant=\"subtitle2\">\n                Win Rate: 90%\n              </Typography>\n            <IconButton className={classes.avatarIcon} edge=\"end\" aria-label=\"requires-password\">\n              {generateAvatar(player_name)}\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      );\n    }) \n  }\n\n  const noRoomsMessage = (\n    <>\n      <Typography className={classes.fullMessage} variant=\"h5\">\n        No Rooms Available\n      </Typography>\n      <Typography className={classes.fullMessage} variant=\"subtitle1\">\n        Click \"NEW ROOM\" to create a new one\n      </Typography>\n    </>\n  );\n\n  return (\n    <List className={classes.cardsContainer}>\n      {!allGameRooms.length \n        ? noRoomsMessage \n        : generateGameRooms()}    \n    </List>\n  )\n}\n\nconst mapStateToProps = ({ allGameRooms, currentPlayer }) => ({\n  allGameRooms,\n  currPlayerName: currentPlayer.player.player_name,\n})\n\nexport default connect(mapStateToProps)(Rooms);","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  inputContainer: {\n    display: 'flex',\n    width: '30vw',\n    maxWidth: '550px',\n    minWidth: '280px',\n    flexDirection: 'column'\n  }\n}));\n\nexport default function NewRoomDialog({submitHandler, isVisible, showForm }) {\n  const classes = useStyles();\n  const [formFields, setFormFields] = useState({roomName: '', roomPassword: ''});\n\n  const handleForm = ({ target }) => setFormFields({ ...formFields, [target.name]: target.value });\n\n  const handleCreate = () => {\n    if (formFields.roomName.length > 2) {\n      submitHandler(formFields);\n      setFormFields({roomName: '', roomPassword: ''});\n    }\n  };\n\n  return (\n    <Dialog open={isVisible} onClose={() => showForm(false)} aria-labelledby=\"Create new room\">\n      <DialogTitle id=\"Create new room\">Create New Room</DialogTitle>\n      <DialogContent className={classes.inputContainer}>\n        <TextField\n          autoFocus\n          required\n          margin=\"dense\"\n          onChange={handleForm}\n          label=\"Name (3-35 Chars)\"\n          type=\"text\"\n          name=\"roomName\"\n          inputProps={{'maxLength': '45', 'autoComplete': 'off'}}\n        />\n        <TextField\n          margin=\"dense\"\n          onChange={handleForm}\n          label=\"Password (Optional)\"\n          type=\"text\"\n          name=\"roomPassword\"\n          inputProps={{'maxLength': '15', 'autoComplete': 'off'}}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCreate} color=\"primary\">\n          Create\n        </Button>\n        <Button onClick={() => showForm(false)} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import React, { useState, useEffect, useRef } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport generateAvatar from '../../utils/nameAvatarGenerator';\nimport colors from '../../MUI_theme';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setPlayerReady } from '../../websocket-api';\nimport { Grid } from '@material-ui/core';\nimport { Grow } from '@material-ui/core';\nimport { unsubscribeToActiveGame, leaveGame } from '../../websocket-api';\nimport { leaveActiveGame } from '../../actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '700px',\n    marginBottom: '10px',\n    padding: theme.spacing(3, 2, 2, 2),\n    background: ({palette}) => palette.light.lighterBlue,\n    position: 'relative',\n    textAlign: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px'\n  },\n  playerCard: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    padding: '20px 0',\n    borderRadius: '20px',\n    margin: '10px auto',\n    boxShadow: theme.shadows[2],\n  },\n  leaveButton: {\n    position: 'absolute',\n    top: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  isReady: {\n    background: ({palette}) => palette.dark.midDarkBlue,\n    color: '#FFFFFF',\n  },\n  mainCardBorder: {\n    border: ({playerColor}) => `8px solid ${!!playerColor.length ? playerColor : 'white'}`,\n  },\n  oppCardBorder: {\n    border: ({oppColor}) => `8px solid ${!!oppColor.length ? oppColor : 'white'}`,\n  },\n  mainReadyBtn: {\n    margin: theme.spacing(1)\n  },\n  chip: {\n    height: '6vw',\n    width: '6vw',\n    maxWidth: '80px',\n    maxHeight: '80px',\n    alignSelf: 'flex-end',\n    [theme.breakpoints.down('sm')]: {\n      width: '9vw',\n      height: '9vw',\n      minWidth: '40px',\n      minHeight: '40px',\n    },\n  },\n  chipHover: {\n    '&:hover': {\n      border: ({palette}) => `6px solid ${palette.light.lighterBlue}`,\n      cursor: 'pointer'\n    }\n  },\n  colorsContainer: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignContent: 'center',\n    margin: '10px'\n  },\n  colorBoxTitle: {\n    textAlign: 'center',\n    color: ({palette}) => palette.light.lighterGray,\n    borderRadius: '5px 5px 0 0',\n    background: ({palette}) => palette.dark.darkBlueGray\n  },\n  colorsBox: {\n    borderRadius: '5px',\n    boxShadow: theme.shadows[2],\n    display: 'flex',\n    background: ({palette}) => palette.light.lightBlue,\n    flexDirection: 'column',\n  },\n  playerColor: {\n    border: ({palette}) => `6px solid ${palette.dark.darkerBlueGray}`\n  },\n  oppColor: {\n    cursor: 'not-allowed',\n    opacity: '.1',\n    border: ({palette}) => `6px solid ${palette.light.lightGray}`\n  },\n  opponentReadyBtn: {\n    padding: '5px 10px',\n    borderRadius: '10px',\n  }\n}));\n\nfunction WaitingRoom(props) {\n  const hues = Object.values(colors.palette.chips);\n  const [isReady, setIsReady] = useState(false);\n  const [mainPlayer, setMainPlayer] = useState({});\n  const [opponent, setOpponent] = useState({});\n  const [playerColor, setPlayerColor] = useState('');\n  const [oppColor, setOppColor] = useState('');\n  const { players, currPlayerName, resetActiveGame } = props;\n  const prevPlayers = useRef(props.players);\n  const classes = useStyles({...colors, oppColor, playerColor});\n\n  const pickRandomColor = () => {\n    const cleared = [...hues].filter(c => c !== oppColor);\n    return cleared[Math.floor(Math.random() * cleared.length)];\n  }\n    \n  const handleLeave = () => {\n    unsubscribeToActiveGame();\n    leaveGame();\n    resetActiveGame();\n  };\n\n  const chipStyleSelector = (isPlayer, isOpp) => {\n    const {playerColor, oppColor, chip, chipHover} = classes;\n    switch(true) {\n      case isPlayer:\n        return `${chip} ${playerColor}`\n      case isOpp:\n        return `${chip} ${oppColor}`\n      default:\n        return `${chip} ${chipHover}`;\n    }\n  };\n\n  const handleColorSelect = (color) => {\n    if (color !== oppColor) {\n      setPlayerColor(color);\n    }\n  };\n\n  const generateChips = () => hues.map(hue => {\n    const isPlayer = hue === playerColor;\n    const isOpp = hue === oppColor;\n    return (\n      <Box \n        onClick={() => handleColorSelect(hue)} \n        boxShadow={3} \n        key={hue} \n        borderRadius=\"50%\" \n        bgcolor={hue} \n        className={chipStyleSelector(isPlayer, isOpp)}>\n      </Box>\n    )\n  });\n\n  useEffect(() => {\n    if (players !== prevPlayers) {\n      for (let player of players) {\n        const p = player || {};\n        if (p.player_name === currPlayerName) {\n          setMainPlayer(p);\n          setPlayerColor(p.chipColor || '');\n        } else {\n          setOpponent(p);\n          setOppColor(p.chipColor || '');\n        }\n      }\n    }\n  }, [players, prevPlayers, currPlayerName])\n\n  const handleReady = () => {\n    const payload = {\n      isReady: !isReady,\n      chipColor: !!playerColor.length ? playerColor : pickRandomColor()\n    }\n    setPlayerReady(payload);\n    setIsReady(!isReady);\n  };\n\n  const generatePlayerCards = () => players.map(player => {\n    const { playerCard, mainCardBorder, oppCardBorder, isReady } = classes;\n    let p = player || {};\n    const ifMain = (p === mainPlayer);\n\n    const opponentBtn = (\n      <Box className={classes.opponentReadyBtn} boxShadow={3}>\n        <Typography variant='subtitle1'>\n          { opponent.isReady ? 'READY!' : 'Not Ready' }\n        </Typography>\n      </Box>\n    );\n\n    const createCard = () => (\n      <Grow in={!!p.player_name} key={p.clientId || 'OPPONENT'}>\n        <Grid item xs={5}  \n        className={`${playerCard} ${ifMain ? mainCardBorder : oppCardBorder} ${p.isReady && isReady}`}>\n          {!!p.player_name && generateAvatar(p.player_name)}\n          <Typography variant='h6'>\n            {p.player_name}\n          </Typography>\n          <Box>\n            {\n              ifMain && \n                <Button\n                  onClick={handleReady}\n                  variant='contained'\n                  color={p.isReady ? 'primary' : 'inherit'}\n                  className={classes.mainReadyBtn}>\n                  {p.isReady ? 'Ready!' : 'Ready?'}\n                </Button>\n            }\n            {!!opponent.player_name && !ifMain && opponentBtn}\n          </Box>  \n        </Grid>\n      </Grow>\n    )\n\n    return createCard();\n  })\n\n  return (\n    <Grid className={classes.root} container wrap='wrap'>\n      <Fab \n        color=\"inherit\" \n        aria-label=\"leave room\" \n        className={classes.leaveButton} \n        size=\"small\"\n        onClick={handleLeave}>\n        <CloseIcon/>\n      </Fab>\n      <Grid item xs={12}>\n        <Typography variant='h5'>\n          Waiting for Opponent\n        </Typography>\n      </Grid>\n      {generatePlayerCards()}      \n      <Grid item xs={12} className={classes.colorsBox}>\n        <Typography variant='subtitle1' className={classes.colorBoxTitle}>\n          Choose Your Color\n        </Typography>\n        <Box className={classes.colorsContainer}>\n          {generateChips()}\n        </Box>\n      </Grid>\n    </Grid>\n  )\n};\n\nconst mapStateToProps = ({ currentGame, currentPlayer }) => ({\n  players: currentGame.players,\n  currPlayerName: currentPlayer.player.player_name,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetActiveGame: () => dispatch(leaveActiveGame())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WaitingRoom);\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { unsubscribeToActiveGame, createNewGameRoom, joinGameRoom, listenToActiveGame, leaveGame } from '../../websocket-api';\nimport { leaveActiveGame } from '../../actions';\nimport Rooms from './Rooms';\nimport NewRoomDialog from './NewRoomDialog';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport WaitingRoom from '../WaitingRoom';\nimport theme from '../../MUI_theme';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '700px',\n    display: 'flex',\n    height: '100%',\n    margin: 'auto',\n    padding: theme.spacing(2),\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: {\n      height: ({isInRoom}) => isInRoom ? '100vh' : '51vh',\n    }\n  },\n  titleContainer: {\n    borderRadius: '5px 5px 0 0',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(1, 1, 1, 2),\n    background: ({palette}) => palette.light.lighterBlue\n  },\n  roomsContainer: {\n    borderRadius: '5px',\n    margin: 'auto',\n    height: '100%',\n    width: '100%',\n    background: ({palette}) => palette.background.blue.light\n  }\n}));\n\nfunction GameRooms(props) {\n  const [formVisible, showForm] = useState(false);\n  const {currRoomStatus, resetActiveGame} = props;\n  const [isInRoom, setIsInRoom] = useState(false);\n  const classes = useStyles({...theme, isInRoom});\n  \n  const handleFormSubmit = ({roomName, roomPassword}) => {\n    createNewGameRoom(roomName, roomPassword);\n    listenToActiveGame();\n    showForm(false);\n  };\n\n  \n  useEffect(() => {\n    currRoomStatus === 'waiting' || currRoomStatus === 'full'\n    ? setIsInRoom(true)\n    : setIsInRoom(false);\n  }, [currRoomStatus, setIsInRoom])\n\n  const joinRoom = (roomId, password = '') => {\n    if (isInRoom) {\n      handleLeave();\n      joinGameRoom(roomId, password);\n      listenToActiveGame();\n    } else {\n      joinGameRoom(roomId, password);\n      listenToActiveGame();\n    }\n  };\n\n  const handleShowForm = (bool) => {\n    showForm(bool);\n  };\n  \n  const handleLeave = () => {\n    unsubscribeToActiveGame();\n    leaveGame();\n    resetActiveGame();\n  };\n\n  const availableRooms = (\n    <Box boxShadow={3} className={classes.roomsContainer}>\n      <Box className={classes.titleContainer}>\n        <Typography variant=\"h6\">\n          Available Rooms: \n        </Typography>\n        { !isInRoom && \n            <Button \n              variant=\"outlined\" \n              color=\"primary\" \n              onClick={() => handleShowForm(true)}\n              startIcon={<AddIcon/>}>\n              New Room\n            </Button>\n        }\n      </Box>\n      <Rooms isInRoom={isInRoom} joinHandler={joinRoom}/>\n    </Box>\n  );\n\n  if (currRoomStatus === 'active') {\n    return <Redirect to={'/active_game'} />\n  }\n\n  return (\n    <article className={classes.root}>\n      <NewRoomDialog \n        submitHandler={handleFormSubmit} \n        isVisible={formVisible}\n        showForm={handleShowForm}/>\n      {\n        isInRoom && <WaitingRoom leaveHandler={handleLeave} />\n      }\n      {availableRooms}\n    </article>\n  )\n}\n\nconst mapStateToProps = ({ allGameRooms, currentGame }) => ({\n  allGameRooms,\n  currRoomStatus: currentGame.status\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetActiveGame: () => dispatch(leaveActiveGame())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameRooms)\n","import React, { useState, useEffect, useRef } from 'react';\nimport theme from '../../MUI_theme';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport Grow from '@material-ui/core/Grow';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport WaitingRoom from '../WaitingRoom';\nimport { rematchReset, resetReady } from '../../actions';\nimport { connect } from 'react-redux';\nimport { placePlayerChip } from '../../websocket-api';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingRight: theme.spacing(1),\n    margin: 'auto'\n  },\n  turnIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '10px 10px 0 0',    \n    background: ({isPlayerTurn, main, opp}) => isPlayerTurn ? main : opp,\n  },\n  gridContainer: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    justifyContent: 'center',\n    borderRadius: '0 0 10px 10px',    \n    background: ({palette}) => palette.dark.midBlue,    \n    [theme.breakpoints.down('sm')]: {\n      width: '98vw'\n    },\n  },\n  column: {\n    dispaly: 'flex',\n    flexDirection: 'column',\n  }, \n  slot: {\n    borderRadius: '50%',\n    width: '8vw',\n    height: '8vw',\n    margin: '.8vw',\n    borderColor: 'darkGray',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '125px',\n      maxHeight: '125px',\n      margin: '13px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '12vw',\n      height: '12vw',\n    }\n  },\n  emptySlot: {\n    background: ({palette, oppWin, mainWin, isActive}) => \n      oppWin || mainWin || !isActive \n        ? palette.dark.midBlue \n        : palette.light.lighterGray\n  },\n  highlightSlot: {\n    background: ({main}) => main,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlightBorder: {\n    borderColor: ({isPlayerTurn}) => isPlayerTurn ? 'white' : 'darkGray',\n    borderWidth: 4\n  },\n  mainBg: {\n    background: ({main}) => main,\n    border: ({main, mainWin, palette}) => \n      `4px solid ${mainWin ? palette.light.lighterGray : main}`,\n  },\n  oppBg: {\n    background: ({opp}) => opp,\n    border: ({opp, oppWin, palette}) => \n      `4px solid ${oppWin ? palette.light.lighterGray : opp}`,\n  },\n  addChipIcon: {\n    width: '4vw',\n    height: '4vw',\n    minWidth: '30px',\n    minHeight: '30px',\n  },\n  addChipBtn: {\n    color: ({isPlayerTurn}) => isPlayerTurn ? 'white' : 'darkGray',\n  },\n  reMatchBox: {\n    margin: '10px auto',\n    maxWidth: '800px',\n  }\n}));\n\nconst slotProps = {\n  m: 1,\n  border: 1,\n  boxShadow: 3\n};\n\nfunction GameGrid(props) {\n  const { \n    grid, \n    gameStatus, \n    currentTurn, \n    currentPlayer, \n    players, \n    prevSlot, \n    winner, \n    resetGame, \n    resetPlayerReady\n  } = props;\n  const isPlayerTurn = currentTurn === currentPlayer;\n  const isActive = gameStatus === 'active';\n  const [main, setMain] = useState({});\n  const [opponent, setOpponent] = useState({});\n  const [showWaitRoom, setShowWaitRoom] = useState(false);\n  const mainWin = main.player_name === winner;\n  const oppWin = opponent.player_name === winner;\n  const prevState = useRef({winner, grid, players});\n  const [xCoordinate, setCoordinate] = useState(null);\n\n  const classes = useStyles({\n    ...theme, \n    main: main.chipColor, \n    mainWin,\n    opp: opponent.chipColor,\n    oppWin,\n    isPlayerTurn,\n    isActive\n  });\n\n  if (showWaitRoom && players[0].isReady && players[1].isReady) {\n    setShowWaitRoom(false);\n    resetGame();\n  };\n\n  useEffect(() => {\n    const playerCheck = (!main.player_name || !opponent.player_name || players !== prevState.current.players);\n\n    if (playerCheck && isActive) {\n      if (players[0].player_name === currentPlayer) {\n        setMain({...players[0], slot: 1 });\n        setOpponent({...players[1], slot: 2 });\n      } else if (players[1].player_name === currentPlayer) {\n        setMain({...players[1], slot: 2 });\n        setOpponent({...players[0], slot: 1});\n      };\n      prevState.current.players = players;\n    };\n  }, [currentPlayer, players, main, opponent, isActive]);\n\n  useEffect(() => {\n    if (winner !== prevState.current.winner && winner !== null && isActive) {\n      setMain({...main, isReady: false});\n      setOpponent({...opponent, isReady: false});\n      resetPlayerReady();\n      setShowWaitRoom(true);\n    }\n    prevState.current.winner = winner;\n  }, [\n    winner, \n    resetPlayerReady, \n    main,\n    opponent,\n    setShowWaitRoom,\n    isActive\n  ]);\n\n  const handleSlotStyle = (slot, hovered, isBottom) => {\n    const {\n      mainBg,\n      oppBg,\n      highlightSlot,\n      highlightBorder,\n      emptySlot,\n    } = classes;\n\n    switch (true) {\n      case slot === main.slot:\n        return mainBg;       \n      case slot === opponent.slot:\n        return oppBg;\n      case hovered && isBottom && !oppWin && !mainWin:\n        return `${highlightSlot} ${highlightBorder}`  \n      default:\n        return emptySlot\n    }\n  };\n \n  const handleHovered = ({target}) => {\n    const colId = (target.id || target.parentElement.id).split(':');\n    setCoordinate(parseInt(colId[1]));\n  };\n\n  const handleChipPlacement = () => {\n    placePlayerChip(xCoordinate);\n  };\n\n  const generateGrid = () => grid.map((column, idx) => {\n    const isHovered = xCoordinate === idx;\n    let bottomIdx;\n\n    for (let i = column.length - 1; i >= 0; i--) {\n      if (column[i] === 0) {\n        bottomIdx = i;\n        break;\n      };\n    }\n    \n    return (\n      <Box \n        key={`col${idx}`} \n        className={classes.column} \n        id={`xCoordinate:${idx}`} \n        onMouseEnter={handleHovered}\n      >\n        {\n          column.map((gridSlot, i) => {\n            const isBottom = bottomIdx === i && isHovered;\n            const isNew = prevSlot.join('') === [idx, i, gridSlot].join('');\n\n            const bottomHoveredSlot = (\n              <Fade in={isBottom}>\n                <Box \n                  onClick={handleChipPlacement} \n                  className={`${classes.slot} ${handleSlotStyle(gridSlot, isHovered, isBottom )}`} \n                  {...slotProps}\n                >\n                <IconButton className={classes.addChipBtn}>\n                  <AddIcon className={classes.addChipIcon}/>\n                </IconButton>\n                </Box>\n              </Fade>\n            );\n            const defaultSlot = (\n              <Box \n                key={`col${idx}row${i}player${gridSlot}`} \n                className={`${classes.slot} ${handleSlotStyle(gridSlot, isHovered, isBottom )}`}\n                {...slotProps}\n              />\n            );\n            const newSlot = (\n              <Grow key={`col${idx}row${i}player${gridSlot}`} in={isNew} timeout={600}>\n                <Box \n                  className={`${classes.slot} ${handleSlotStyle(gridSlot, isHovered, isBottom )}`}\n                  {...slotProps}\n                />\n              </Grow>\n            );\n            \n            if (isHovered && isBottom && !showWaitRoom) {\n              return bottomHoveredSlot;\n            } else if (isNew) {\n              return newSlot;\n            } else {\n              return defaultSlot;\n            }\n          })\n        }\n      </Box>\n    )\n  });\n\n  const turnIndicator = () => {\n    return (\n      <Box className={classes.turnIndicator}>\n        <Typography variant='h5'>\n            {!showWaitRoom && `${isPlayerTurn ? 'Your' : opponent.player_name + \"'s\"} Turn!`}\n            {mainWin && 'You Win!'}\n            {oppWin && `${opponent.player_name} Wins!`}\n        </Typography>\n      </Box>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      {showWaitRoom && <div>\n        <Grow in={showWaitRoom}>\n          <Box className={classes.reMatchBox}>\n            <WaitingRoom />\n          </Box>\n        </Grow>\n      </div>}\n      {turnIndicator()}\n      <Box boxShadow={3} className={classes.gridContainer} onMouseLeave={() => setCoordinate(null)}>\n        {generateGrid()}\n      </Box>\n    </div>\n  )\n};\n\nconst mapStateToProps = ({ currentGame, currentPlayer }) => ({\n  grid: currentGame.gridX,\n  currentTurn: currentGame.currentPlayer\n    ? currentGame.currentPlayer.player_name\n    : currentGame.currentPlayer,\n  currentPlayer: currentPlayer.player\n    ? currentPlayer.player.player_name\n    : null,\n  players: currentGame.players,\n  prevSlot: currentGame.prevSlot,\n  winner: currentGame.winner,\n  gameStatus: currentGame.status\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetGame: () => dispatch(rematchReset()),\n  resetPlayerReady: () => dispatch(resetReady())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameGrid);\n","import React, { useState } from 'react';\nimport theme from '../../MUI_theme';\nimport Box from '@material-ui/core/Box';\nimport GameGrid from './GameGrid';\nimport ChatBox from '../ChatBox';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { sendInGameMessage } from '../../websocket-api';\nimport { leaveActiveGame, resetGrid } from '../../actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    maxWidth: '1600px',\n    padding: theme.spacing(1),\n    [theme.breakpoints.up('lg')]: {\n      margin: '0 auto'\n    }, \n    [theme.breakpoints.down('md')]: {\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    },\n    background: ({palette}) => palette.dark.midDarkBlue,\n  },\n  chatBox: {\n    [theme.breakpoints.down('md')]: {\n      marginTop: theme.spacing(2),\n      width: '70vw',\n      height: '60vh'\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '100%'\n    },\n    display: 'flex',\n    width: '100%',\n    position: 'relative',\n  },\n  chatToggle: {\n    position: 'absolute',\n    right: '5px',\n    top: '5px',\n    zIndex: 1\n  }\n\n}));\n\nfunction ActiveGame(props) {\n  const classes = useStyles(theme);\n  const [isChatActive, setChatActive] = useState(true);\n  const { status, resetGame, resetGameGrid } = props;\n\n  const handleChatToggle = () => {\n    setChatActive(!isChatActive);\n  };\n\n  const handleSendMessage = (message) => {\n    sendInGameMessage(message);\n  };\n\n  if (status !== 'active' && status !== 'full') {\n    if (status === 'waiting') resetGameGrid()\n    else resetGame();\n    return <Redirect to='/home' />\n  };\n\n  return (\n    <Box className={classes.root}>\n      <GameGrid />\n      <Box className={classes.chatBox}>\n        <Switch\n          checked={isChatActive}\n          onChange={handleChatToggle}\n          value=\"checkedB\"\n          className={classes.chatToggle}\n          color=\"primary\"\n          inputProps={{ 'aria-label': 'Join/leave game chat' }}\n        />\n        {isChatActive && (\n          <ChatBox \n          messages={props.messages} \n          sendMessage={handleSendMessage} \n          title={'Game Chat:'}/>\n        )}\n      </Box>\n    </Box>\n  )\n};\n\nconst mapStateToProps = ({ currentGame }) => ({\n  grid: currentGame.grid,\n  status: currentGame.status,\n  messages: currentGame.messages,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetGame: () => dispatch(leaveActiveGame()),\n  resetGameGrid: () => dispatch(resetGrid())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveGame);\n","const handlers = {\n  routes:  {\n    login: 'https://ec2-34-205-32-52.compute-1.amazonaws.com:443/api/v1/login',\n    signup: 'https://ec2-34-205-32-52.compute-1.amazonaws.com:443/api/v1/signup',\n    anonLogin: 'https://ec2-34-205-32-52.compute-1.amazonaws.com:443/api/v1/anonymous'\n  },\n  noTokenPost: function(route, payload) {\n    return fetch(route, {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  },\n  loginViaEmail: function(payload) {\n    return this.noTokenPost(this.routes.login, payload)\n  },\n  signupUser: function(payload) {\n    return this.noTokenPost(this.routes.signup, payload)\n  },\n  loginViaToken: function(token) {\n    return fetch(this.routes.login, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n  },\n  anonymousLogin: function(player) {\n    return this.noTokenPost(this.routes.anonLogin, player)\n  }\n};\n\nexport default handlers","import handler from './requestHandlers';\n\nexport default function(type, payload) {\n  switch(type) {\n    case 'login':\n      return handler.loginViaEmail(payload);\n    case 'tokenLogin':\n      const token = JSON.parse(localStorage.getItem('connect_four_token')) || payload;\n      return handler.loginViaToken(token);\n    case 'signupUser':\n      return handler.signupUser(payload);\n    case 'anonymousLogin':\n      return handler.anonymousLogin(payload);\n    default:\n      console.log('def');\n  }\n};","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport request from '../../requests';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Grow from '@material-ui/core/Grow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    position: 'fixed',\n    top: '5%',\n    right: '0',\n    margin: theme.spacing(2),\n    flexDirection: 'row-reverse'\n  },\n  inputsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap',\n    minWidth: '300px',\n    padding: theme.spacing(2),\n    position: 'relative',\n    background: 'rgba(255, 255, 255, .9)',\n    boxShadow: theme.shadows[5],\n  },\n  loadingIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n  },\n  optionButton: {\n    margin: '10px 0'\n  },\n  error: {\n    color: 'red',\n    margin: '5px auto'\n  }\n}));\n\nfunction PlayerForms(props) {\n  const classes = useStyles();\n  const [loginValues, setLoginValues] = useState({});\n  const [signUpValues, setSignUpValues] = useState({});\n  const [showSignUpForm, setShowSignUpForm] = useState(false);\n  const [showAnonLoginForm, setShowAnonLoginForm] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleLoginForm = ({ target }) => setLoginValues({ ...loginValues, [target.name]: target.value });\n  const handleSignUpForm = ({ target }) => {\n    const withSpace = target.value.replace(/[^a-zA-Z\\s0-9]/g, \"\");\n    const withoutSpace = withSpace.replace(/[\\s]/g, \"\");\n\n    if (target.name === 'secret_one' || target.name === 'secret_two') {\n      setSignUpValues({ ...signUpValues, [target.name]: withSpace })\n    } else if (target.name === 'email') {\n      setSignUpValues({ ...signUpValues, [target.name]: target.value })\n    } else {\n      setSignUpValues({ ...signUpValues, [target.name]: withoutSpace })\n    }\n  };\n\n  const verifySignUpParams = () => {\n    const errors = [];\n    const reqParams = [\n      'email',\n      'player_name', \n      'password',\n      'confirm_password',\n      'secret_one', \n      'secret_two',\n    ];\n\n    for (let param of reqParams) {\n      const readable = param.split('_').join(' ');\n      if (!signUpValues[param]) {\n        errors.push({ type: 'input', error: `${readable.toUpperCase()} is required.`});\n      } else if (signUpValues[param].length < 3) {\n        errors.push({ type: 'input', error: `${readable.toUpperCase()} must be at least 3 characters or longer.`});\n      } else if (param === 'password') {\n        if (signUpValues.password !== signUpValues.confirm_password) {\n          errors.push({ type: 'input', error: 'Passwords must match.'})\n        }\n      }\n    }\n\n    if (errors.length > 0) {\n      setErrors(errors);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const loadingIcon = (\n    <div className={classes.loadingIcon}>\n      <CircularProgress  />\n    </div>\n  );\n\n  const signUpUser = async (e) => {\n    e.preventDefault();\n    try {\n      if (verifySignUpParams()) {\n        const {\n          email,\n          password,\n          player_name,\n          secret_one,\n          secret_two,\n        } = signUpValues;\n        const res = await request('signupUser', {\n          email,\n          password,\n          player_name,\n          secret_one,\n          secret_two,\n        });\n        if (!res.ok) {\n          setLoading(false);\n          throw await res.json();\n        } else {\n          const player = await res.json();\n          props.registerPlayer(player);\n          setLoading(false);\n        };\n      }\n    } catch(err) {\n      setErrors([err]);\n    }\n  };\n\n  const loginAnonymously = async (e) => {\n    e.preventDefault();\n    const { player_name } = signUpValues;\n    setLoading(true);\n    try {\n      const res = await request('anonymousLogin', {player_name});\n      if (!res.ok) {\n        setLoading(false);\n        throw await res.json();\n      } else {\n        const token = await res.json();\n        const anon = {\n          player: {\n            player_name, \n          },\n          type: 'anonymous', \n          ...token\n        };\n        props.registerPlayer(anon);\n        setLoading(false);\n      };\n    } catch(error) {\n      setErrors([error]);\n    }\n  };\n\n  const loginUser = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const player = await request('login', loginValues);\n      if (!player.ok) {\n        setLoading(false);\n        throw await player.json();\n      } else {\n        props.registerPlayer(await player.json())\n        setLoading(false);\n      };\n    } catch(err) {\n      setErrors([err]);\n    }\n  };\n  \n  const generateErrors = () => errors.map(err => {\n    return (\n      <Grow in={!!errors.length} timeout={400}>\n        <Typography className={classes.error}>\n          {err.error}\n        </Typography>\n      </Grow>\n    )\n  });\n\n  const optionButtons = (\n    <div className={classes.inputsContainer}>\n      <Button \n        color=\"secondary\" \n        variant=\"contained\" \n        className={classes.optionButton}\n        onClick={() => {\n          setShowSignUpForm(true);\n          setShowAnonLoginForm(false);\n        }}>\n        Create Account\n      </Button>\n      {!showAnonLoginForm && <Button \n        color=\"secondary\" \n        variant=\"contained\" \n        className={classes.optionButton}\n        onClick={() => setShowAnonLoginForm(true)}>\n        Login Anonymously\n      </Button>}\n    </div>\n  );\n\n  const anonForm = (\n    <form autoComplete=\"off\" onSubmit={loginAnonymously}>\n      <Box className={classes.inputsContainer}>\n        <Typography variant='h6'>\n          Anonymous Login\n        </Typography>\n        <TextField\n          id=\"player_name\"\n          label=\"Player Name\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"player_name\"\n          value={signUpValues.player_name || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 15}}\n        />\n        <h4>{isLoading && loadingIcon }</h4>\n        {!!errors.length && generateErrors()}\n        <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n          Login\n        </Button>\n        <Button color=\"primary\" size=\"small\" onClick={() => {\n          setShowSignUpForm(false)\n          setShowAnonLoginForm(false)}}>\n          Already a user? Click me\n        </Button>\n      </Box>\n    </form> \n  )\n\n  const registerForm = (\n    <form autoComplete=\"off\" onSubmit={signUpUser}>\n      <Box className={classes.inputsContainer}>\n        <TextField\n          id=\"outlined-email\"\n          label=\"Email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          value={signUpValues.email || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 35}}\n        />\n        <TextField\n          id=\"outlined-player-name\"\n          label=\"Player Name\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"player_name\"\n          value={signUpValues.player_name || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 20}}\n        />\n        <TextField\n          id=\"outlined-password\"\n          label=\"Password\"\n          className={classes.textField}\n          type=\"password\"\n          name=\"password\"\n          value={signUpValues.password || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 25}}\n        />\n        <TextField\n          id=\"outlined-confirm-password\"\n          label=\"Confirm Password\"\n          className={classes.textField}\n          type=\"password\"\n          name=\"confirm_password\"\n          value={signUpValues.confirm_password || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 25}}\n        />   \n        <TextField\n          id=\"outlined-secret-one\"\n          label=\"Secret Phrase One (For: Password Reset)\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"secret_one\"\n          value={signUpValues.secret_one || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 40}}\n        />   \n        <TextField\n          id=\"outlined-secret-two\"\n          label=\"Secret Phrase Two (For: Password Reset)\"\n          className={classes.textField}\n          type=\"text\"\n          name=\"secret_two\"\n          value={signUpValues.secret_two || ''}\n          onChange={handleSignUpForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 40}}\n        />           \n        <h4>{isLoading && loadingIcon }</h4>\n        {!!errors.length && generateErrors()}\n        <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n        <Button color=\"primary\" size=\"small\" onClick={() => setShowSignUpForm(false)}>\n          Already a user? Click me\n        </Button>\n      </Box>\n    </form> \n  );\n\n  const loginForm = (\n    <form autoComplete=\"off\" onSubmit={loginUser}>\n      <Box className={classes.inputsContainer}>\n        <TextField\n          error={!!errors.length}\n          id=\"outlined-email\"\n          label=\"Email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          value={loginValues.email || ''}\n          onChange={handleLoginForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 35}}\n        />\n        <TextField\n          error={!!errors.length}\n          id=\"outlined-password\"\n          label=\"Password\"\n          className={classes.textField}\n          name=\"password\"\n          type=\"password\"\n          value={loginValues.password || ''}\n          onChange={handleLoginForm}\n          margin=\"normal\"\n          variant=\"outlined\"\n          inputProps={{maxLength: 25}}\n        />\n        {isLoading && loadingIcon }\n        {!!errors.length && generateErrors()}\n        <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n          Log In\n        </Button>\n      </Box>\n    </form>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Box onFocus={() => setErrors([])}>\n        { !showSignUpForm && !showAnonLoginForm && loginForm }\n        { showSignUpForm && registerForm }\n        { showAnonLoginForm &&  anonForm }\n        { !showSignUpForm && optionButtons }\n      </Box>\n    </div>\n  );\n};\n\nexport default PlayerForms;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport theme from '../../MUI_theme';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport generateAvatar from '../../utils/nameAvatarGenerator';\nimport Typography from '@material-ui/core/Typography';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport DoneIcon from '@material-ui/icons/Done';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { leaveWorldChat, leaveGame } from '../../websocket-api';\nimport { saveCurrentPlayer, leaveActiveGame } from '../../actions';\nimport { connect } from 'react-redux';\n\nconst drawerWidth = 230\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    padding: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: ({palette}) => palette.light.lighterBlue,\n    color: ({palette}) => palette.dark.darkerBlueGray\n  },\n  fixedMenu: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n  },\n  menuList: {\n  },\n  userName: {\n    marginLeft: theme.spacing(3)\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'red'\n  }\n}));\n\nfunction PlayerDrawer(props) {\n  const classes = useStyles(theme);\n\n  const handlePlayerDetails = () => {\n    /// SHOW USER DETAILS\n  };\n\n\n  const handlePlayerStats = () => {\n    /// SHOW STATS\n  };\n\n  const handleAchievements = () => {\n    /// HANDLE ACHIEVEMENTS\n  };\n\n  const handleFriends = () => {\n    /// HANDLE SHOW FRIENDS\n  };\n\n  const handleLogout = () => {\n    leaveWorldChat();\n    leaveGame();\n    props.resetActiveGame();\n    props.deletePlayer();\n    localStorage.removeItem('connect_four_token');\n  };\n  \n  const drawers = (\n    <div>\n      <div className={classes.toolbar}>\n        {generateAvatar(props.player.player_name)}\n        <Typography variant=\"h6\" className={classes.userName}>\n          {props.player.player_name}\n        </Typography>\n      </div>\n      <Divider />\n      <List className={classes.menuList}>\n        <ListItem button key={\"Stats\"} onClick={handlePlayerStats}>\n          <ListItemIcon>\n            <EqualizerIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Stats\"} />\n        </ListItem>\n        <ListItem button key={\"Achievements\"} onClick={handleAchievements}>\n          <ListItemIcon>\n            <DoneIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Achievements\"} />\n        </ListItem>\n        <ListItem button key={\"Account\"} onClick={handlePlayerDetails}>\n          <ListItemIcon>\n            <PermIdentityIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Account\"} />\n        </ListItem>\n        <ListItem button key={\"Friends\"} onClick={handleFriends}>\n          <ListItemIcon>\n            <PeopleOutlineIcon />\n          </ListItemIcon>\n          <ListItemText primary={\"Friends\"} />\n        </ListItem>\n      </List>\n      <Divider />\n      <List  className={classes.menuList}>\n        <Link to='/' className={classes.link}>\n          <ListItem button key={\"Logout\"} onClick={() => {\n            handleLogout();\n            props.toggleDrawer();\n          }}>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Logout\"} />\n          </ListItem> \n        </Link>\n      </List>\n    </div>\n  );\n\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"right\"\n          open={props.isVisible}\n          onClose={props.toggleDrawer}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawers}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          className={classes.fixedMenu}\n          variant=\"permanent\"\n          open\n          anchor=\"right\"\n        >\n          {drawers}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n\nconst mapStateToProps = ({ currentPlayer }) => ({\n  player: currentPlayer.player,\n  isActive: currentPlayer.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deletePlayer: () => dispatch(saveCurrentPlayer({})),\n  resetActiveGame: () => dispatch(leaveActiveGame())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerDrawer);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../../MUI_theme';\nimport Box from '@material-ui/core/Box';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    background: ({palette}) => palette.dark.midBlue,   \n  },\n  gridContainer: {\n    overflow: 'hidden',\n    display: 'flex',\n    padding: theme.spacing(1),\n    justifyContent: 'center',\n    borderRadius: '0 0 10px 10px',    \n  },\n  column: {\n    dispaly: 'flex',\n    flexDirection: 'column',\n  }, \n  slot: {\n    borderRadius: '50%',\n    width: '11vw',\n    height: '11vw',\n    margin: '1vw',\n    maxWidth: '140px',\n    maxHeight: '140px',\n    [theme.breakpoints.down('sm')]: {\n      width: '10vh',\n      height: '10vh',\n      margin: '1vh'\n    }\n  },\n  emptySlot: {\n    background: ({palette}) => palette.light.lighterGray\n  },\n  chipOne: {\n    background: ({chipOne}) => chipOne\n  },\n  chipTwo: {\n    background: ({chipTwo}) => chipTwo\n  },\n}));\n\nconst slotProps = {\n  m: 1,\n  boxShadow: 3\n};\n\nfunction Splash() {\n  const randomizedColors = Object.values(theme.palette.chips)\n    .sort(() => .5 - Math.random());\n  const [chipOne] = useState(randomizedColors[0]);\n  const [chipTwo] = useState(randomizedColors[1]);\n  const [currSlot, setCurrSlot] = useState([0, 0]);\n  const [currChip, setCurrChip] = useState(1);\n  const [grid, setGrid] = useState([\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 ], \n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ], \n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],\n    [0, 0, 0, 0, 0, 0, 0, 1, 2, 2 ], \n    [0, 0, 0, 0, 0, 0, 0, 0, 2, 2 ],\n    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1 ], \n    [0, 0, 0, 0, 0, 0, 0, 1, 1, 2 ],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 ], \n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1 ],\n  ]);\n  const classes = useStyles({\n    ...theme,\n    chipOne,\n    chipTwo\n  });\n\n  const placeRandomChip = useCallback(() => {\n    const randIdx = Math.floor(Math.random() * grid.length);\n\n    for (let i = grid[randIdx].length - 1; i >= 0; i--) {\n      if (grid[randIdx][i] === 0) {\n        const copy = [...grid];\n        copy[randIdx][i] = currChip;\n        setGrid(copy);\n        setCurrSlot([randIdx, i]);\n        currChip === 1 ? setCurrChip(2) :  setCurrChip(1) ;\n        break;\n      };\n    };\n  }, [setCurrChip, currChip, grid]);\n\n  useEffect(() => {\n    const timout = setInterval(placeRandomChip, 1300);\n    return () => clearInterval(timout);\n  }, [placeRandomChip])\n\n  const handleSlotStyle = (slot, currChip) => {\n    const {\n      chipOne,\n      chipTwo,\n      emptySlot\n    } = classes;\n\n    switch (true) {\n      case currChip === 1:\n        return chipOne\n      case currChip === 2:\n          return chipTwo\n      default:\n        return emptySlot\n    }\n  };\n\n  const connectFourGrid = grid.map((column, i) => {\n    return (\n      <Box key={`col${i}`}  className={classes.column}>\n        {\n          column.map((gridSlot, j) => {\n            const ifNew = (i === currSlot[0] && j === currSlot[1]);\n            const colorChip = (\n              <Box className={`${classes.slot} ${handleSlotStyle(gridSlot, gridSlot )}`} {...slotProps} />\n            );\n            const slidingChip = (\n              <Grow\n                key={`col${i}row${j}chip${gridSlot}`}\n                in={ifNew} \n                direction='down'\n                timeout={800}>\n                {colorChip}\n              </Grow>\n            );     \n            return ifNew ? slidingChip : colorChip;\n          })\n        }\n      </Box>\n    )\n  });\n\n  return (\n    <Box className={classes.root}>\n      <Box boxShadow={3} className={classes.gridContainer}>\n        {connectFourGrid}\n      </Box>\n    </Box>\n  )\n};\n\nexport default Splash\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../../MUI_theme';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    paddingTop: '10vh',\n    background: ({palette}) => palette.dark.midBlue,   \n    height: '100vh',\n  }\n}));\n\nfunction FourOhFourPage() {\n  const classes = useStyles(theme);\n\n  return (\n    <Box className={classes.root}>\n     <Typography variant='h1'>\n        404 Error\n     </Typography>\n     <Typography variant='h4'>\n        Nothing here :(\n     </Typography>\n    </Box>\n  )\n};\n\nexport default FourOhFourPage;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { registerClient, removeClient } from '../../websocket-api';\nimport { connect } from 'react-redux';\nimport { saveCurrentPlayer } from '../../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport WorldChat from '../WorldChat';\nimport Header from '../Header';\nimport GameRooms from '../GameRooms';\nimport Connect4Grid from '../ActiveGame';\nimport PlayerForms from '../PlayerForms';\nimport request from '../../requests';\nimport theme from '../../MUI_theme';\nimport PlayerDrawer from '../PlayerDrawer';\nimport Splash from '../Splash';\nimport FourOhFourPage from '../404Page';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: 0,\n    background: ({palette}) => palette.dark.darkGray,\n    [theme.breakpoints.up('lg')]: {\n      paddingRight: '230px'\n    },\n  },\n  homePgContainer: {\n    maxWidth: '1400px',\n    margin: 'auto',\n  },\n  homePgItem: {\n    width: '50%',\n    margin: '0',\n    [theme.breakpoints.down('sm')]: {\n      minWidth: '100vw',\n    },\n  },\n  loginPageContainer: {\n    display: 'flex',\n    width: '100vw',\n    flexDirection: 'column',\n    position: 'relative',\n  }\n}));\n\nfunction App(props) {\n  const classes = useStyles(theme);\n  const [isDrawerOpen, openDrawer] = useState(false);\n  const [error, setError] = useState({});\n\n  const handleDrawerToggle = () => {\n    openDrawer(!isDrawerOpen);\n  };  \n\n  const registerPlayer = (player) => {\n    props.savePlayer(player);\n    registerClient(player.token);\n    if (player.type !== 'anonymous') {\n      localStorage.setItem('connect_four_token', JSON.stringify(player.token));\n    }\n  };\n\n  const tokenLogin = async () => {\n    const token = JSON.parse(localStorage.getItem('connect_four_token')) || false;\n\n    if (token) {\n      try {\n        const player = await request('tokenLogin', token);\n        if (player.ok) registerPlayer(await player.json());\n        else throw await player.json();\n      } catch(err) {\n        setError(err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    tokenLogin();\n    return () => removeClient();\n  }, [])\n\n\n  return (\n    <div className={classes.root}>\n      <Header toggleDrawer={handleDrawerToggle} />\n      { props.player.token && <PlayerDrawer isVisible={isDrawerOpen} toggleDrawer={handleDrawerToggle}/>}\n      <Switch>\n        <Route \n          exact path='/'\n          render={(() => {\n            if (props.player.token) return <Redirect to='/home'/>;\n            return (\n              <div className={classes.loginPageContainer}>\n                <Splash />\n                <PlayerForms registerPlayer={registerPlayer} />\n              </div>)\n          })}\n        />\n        <Route \n          exact path='/home'\n          render={(() => {\n            if (!props.player.token) return <Redirect to='/'/>;\n            return (\n              <Grid className={classes.homePgContainer} container wrap='wrap-reverse'>\n                <Grid item xs={6} className={classes.homePgItem}>\n                  <WorldChat />\n                </Grid>\n                <Grid item xs={6} className={classes.homePgItem}>\n                  <GameRooms />\n                </Grid>\n              </Grid>)\n          })}\n        />\n        <Route \n          exact path='/active_game'\n          render={(() => {\n            return (\n            <Connect4Grid />\n            )\n            })\n          }\n        />\n        <Route component={FourOhFourPage} />\n      </Switch>      \n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  savePlayer: player => dispatch(saveCurrentPlayer(player))\n});\n\nconst mapStateToDispatch = ({ currentPlayer }) => ({\n  player: currentPlayer\n});\n\nexport default connect(mapStateToDispatch, mapDispatchToProps)(App);\n","const worldChat = (state = { players: [], messages: [] } , action) => {\n  let { players, messages } = state;\n\n  switch(action.type) {\n    case 'SET_GLOBAL_PLAYERS':\n      return { players: action.players, messages };\n    case 'UPDATE_GLOBAL_PLAYERS':\n      const { player } = action.player;\n      if (action.player.update_type === 'delete') {\n        const idxFound = players.findIndex(p => p.player_name === player.player_name);\n        players.splice(idxFound, 1);\n        return { messages, players: [...players] }\n      } else {\n        return { messages, players: [...players, player] };\n      }\n    case 'UPDATE_GLOBAL_MESSAGES':\n      return { players, messages: [...messages, action.message] };\n    case 'UPDATE_GLOBAL_CHAT':\n      return { players: action.players, messages: action.messages };\n    case 'LOGOUT_USER':\n      return { players: [], messages: [] };\n    default:\n      return state;\n  }\n};\n\nexport default worldChat;","const initialState = {\n  gridX: [            // Y Axis(ROW)\n    [0, 0, 0, 0, 0, 0], // 0\n    [0, 0, 0, 0, 0, 0], // 1\n    [0, 0, 0, 0, 0, 0], // 2\n    [0, 0, 0, 0, 0, 0], // 3\n    [0, 0, 0, 0, 0, 0], // 4\n    [0, 0, 0, 0, 0, 0],  // 5\n    [0, 0, 0, 0, 0, 0]\n  // 0, 1, 2, 3, 4, 5, 6 => X Axis(COLUMN)\n  ],\n  prevSlot: [0, 0, 0],\n  currentPlayer: null,\n  status: '',\n  messages: [],\n  players: [null, null],\n  winner: null\n};\n\nconst currentGame = (state = initialState, action) => {\n  const {prevSlot} = action.data || state;\n  const gridCopy = [...state.gridX];\n  if (prevSlot) gridCopy[prevSlot[0]][prevSlot[1]] = prevSlot[2];\n\n  switch(action.type) {\n    case 'UPDATE_ACTIVE_GAME':\n      return { \n        gridX: gridCopy, \n        currentPlayer: action.data.currentPlayer, \n        messages: state.messages, \n        status: action.data.status, \n        players: state.players,\n        prevSlot,\n        winner: initialState.winner\n      };\n    case 'UPDATE_INACTIVE_GAME':\n      return { \n        gridX: state.gridX, \n        currentPlayer: state.currentPlayer, \n        messages: state.messages, \n        status: action.data.status, \n        players: action.data.players,\n        prevSlot: state.prevSlot,\n        winner: null\n      };\n    case 'UPDATE_ACTIVE_GAME_MSGS':\n      return { \n        ...state, \n        messages: [...state.messages, action.data] \n      };\n    case 'REMATCH_GAME_RESET':\n      return { \n        gridX: [     \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0]\n        ],\n        currentPlayer: initialState.currentPlayer, \n        messages: state.messages, \n        status: 'full', \n        players: state.players,\n        prevSlot: initialState.prevSlot,\n        winner: null\n      };\n    case 'GAME_OVER':\n      return {\n        ...state,\n        winner: action.data.winner\n      };\n    case 'RESET_GRID':\n      return { \n        ...state,\n        gridX: [     \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0]\n        ]\n      };\n    case 'RESET_PLAYER_READY':\n      return { \n        ...state, \n        players: state.players.map(p => {\n          p.isReady = false;\n          return p;\n        })\n      };\n    case 'LEAVE_ACTIVE_GAME' || 'LOGOUT_USER':\n      return {\n        gridX: [     \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0], \n          [0, 0, 0, 0, 0, 0]\n        ],\n        prevSlot: [0, 0, 0],\n        currentPlayer: null,\n        status: '',\n        messages: [],\n        players: [null, null],\n        winner: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currentGame;","const currentPlayer = (state = {}, action) => {\n  switch(action.type) {\n    case 'SAVE_PLAYER_INFO':\n      return  action.player;\n    case 'LOGOUT_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default currentPlayer;","const allGameRooms = (state = [], action) => {\n  const rooms = [...state];\n\n  switch(action.type) {\n    case 'SET_ALL_GAME_ROOMS':\n      return  action.room;\n    case 'UPDATE_GAME_ROOM_LIST':\n      const { updateType, roomId } = action.room;\n      if (updateType === 'addRoom') {\n        return [ action.room, ...state ];\n      } else if (updateType === 'deleteRoom') {\n        const idxFound = state.findIndex(r => r.roomId === roomId);\n        rooms.splice(idxFound, 1);\n        return rooms;\n      };\n      break;\n    case 'UPDATE_A_GAME_ROOM':\n      if (action.room.updateType === 'updateRoom') {\n        const idxFound = state.findIndex(r => r.roomId === action.room.roomId);\n        rooms.splice(idxFound, 1, action.room);\n        return rooms;\n      };\n      break;\n    case 'LOGOUT_USER':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default allGameRooms;","import { combineReducers } from 'redux';\nimport worldChat from './worldChat';\nimport currentGame from './currentGame';\nimport currentPlayer from './currentPlayer';\nimport allGameRooms from './allGameRooms';\n\nconst rootReducer = combineReducers({\n  worldChat,\n  currentGame,\n  currentPlayer,\n  allGameRooms\n})\n\nexport default rootReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <CssBaseline />\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\nexport default store;"],"sourceRoot":""}